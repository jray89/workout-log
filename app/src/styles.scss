@use '~@angular/material' as mat;
@import "./assets/styles/variables";
@import "./assets/styles/vendor/bootstrap/grid.scss";

$my-primary: (50: #e5e6e7,
  100: #bec2c3,
  200: #93999c,
  300: #677074,
  400: #475156,
  500: #263238,
  600: #222d32,
  700: #1c262b,
  800: #171f24,
  900: #0d1317,
  A100: #5bb9ff,
  A200: #28a3ff,
  A400: #008bf4,
  A700: #007dda,
  contrast: (50: #000000,
    100: #000000,
    200: #000000,
    300: #ffffff,
    400: #ffffff,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #ffffff,
    A700: #ffffff,
  ));

$my-accent: (50: #e2e9f4,
  100: #b6c8e3,
  200: #86a3d0,
  300: #567ebd,
  400: #3162ae,
  500: #0d46a0,
  600: #0b3f98,
  700: #09378e,
  800: #072f84,
  900: #032073,
  A100: #a1b3ff,
  A200: #6e8aff,
  A400: #3b61ff,
  A700: #224cff,
  contrast: (50: #000000,
    100: #000000,
    200: #000000,
    300: #ffffff,
    400: #ffffff,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #ffffff,
    A700: #ffffff,
  ));

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$app-primary: mat.define-palette($my-primary);
$app-accent: mat.define-palette(mat.$blue-palette, 700, 500, 900);

// The warn palette is optional (defaults to red).
$app-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$app-theme: mat.define-light-theme((color: (primary: $app-primary,
      accent: $app-accent,
      warn: $app-warn,
    )));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($app-theme);

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;

  * {
    box-sizing: border-box;
  }
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;

  &.loading,
  .show-loading {
    &:before {
      display: block;
      opacity: 1;
      // content: '';
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      position: fixed;
      z-index: 201;
      background: rgba(255, 255, 255, 0.6);
    }

    &:after {
      @extend .loadingIndicator;
      position: fixed;
      top: calc(50% - 30px);
      left: calc(50% - 30px);
      display: block;
      content: '';
      z-index: 202;
    }

    &.show-loading {
      position: relative;

      &:before {
        position: absolute;
        z-index: 96;
      }

      &:after {
        position: absolute;
        z-index: 97;
      }
    }
  }
}

div[class^="col"] {
  mat-form-field {
    width: 100%;
  }
}

:root {
  .loadingIndicator {
    width: 50px;
    height: 50px;
    border-top: 2px solid $u-grey;
    border-right: 2px solid $u-grey;
    border-bottom: 2px solid $u-grey;
    border-left: 2px solid $u-accent;
    border-radius: 50%;
    -webkit-animation: rotate 0.5s infinite linear, opacity 1s forwards;
    -moz-animation: rotate 0.5s infinite linear, opacity 1s forwards;
    animation: rotate 0.5s infinite linear, opacity 1s forwards;
    opacity: 0;
    padding: 0;
  }

  @keyframes rotate {
    from {
      transform: rotate(0deg) translate3d(0, 0, 0);
    }

    to {
      transform: rotate(359deg) translate3d(0, 0, 0);
    }
  }

  @keyframes opacity {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }

  .cta-bottom-right {
    position: fixed !important;
    bottom: 15px;
    right: 15px;
  }

  .cta-bottom-right-absolute {
    position: absolute !important;
    bottom: 15px;
    right: 15px;
  }

  table {
    min-width: 100%;

    &.clickable {
      tr {
        cursor: pointer;

        &:hover {
          td {
            background-color: rgba(0, 0, 0, .05);
          }
        }
      }
    }
  }

  .u-textRight {
    text-align: right;
  }

  .u-textLeft {
    text-align: left;
  }

  .u-textCenter {
    text-align: center;
  }
}



.mat-body p, .mat-body-1 p, .mat-typography p {
  margin: 12px 0 !important;
}
