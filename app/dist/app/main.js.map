{"version":3,"sources":["./src/app/exercises/exercise-details/exercise-details.component.ts","./src/app/exercises/exercise-details/exercise-details.component.html","./src/app/exercises/exercise.service.ts","./src/app/exercises/exercise.interface.ts","./src/app/settings/settings.component.ts","./src/app/settings/settings.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/workouts/workout-details/workout-details.component.ts","./src/app/workouts/workout-details/workout-details.component.html","./src/app/exercises/exercises.component.ts","./src/app/exercises/exercises.component.html","./src/app/workouts/workouts.component.html","./src/app/workouts/workouts.component.ts","./src/app/app-routing.module.ts","./src/app/services/loading/loading.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { LoadingService } from '../../services/loading/loading.service';\nimport { Exercise, ExerciseType } from '../exercise.interface';\nimport { ExerciseService } from '../exercise.service';\n\n@Component({\n  selector: 'app-exercise-details',\n  templateUrl: './exercise-details.component.html',\n  styleUrls: ['./exercise-details.component.scss']\n})\nexport class ExerciseDetailsComponent implements OnInit {\n\n  exercise: Exercise | undefined;\n  loaded: boolean = false;\n  exerciseTypes: ExerciseType[] = [\n    { id: 1, name: \"Lower Body\" },\n    { id: 2, name: \"Upper Body\" },\n    { id: 3, name: \"Core\" }\n  ];\n\n  constructor(private loadingService: LoadingService, private exerciseService: ExerciseService, private route: ActivatedRoute) {\n    this.route.params.subscribe(params => {\n      this.loadExercise(params['id']);\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  loadExercise(id: string) {\n    if (id != `new`) {\n      this.loadingService.isLoading();\n      this.exerciseService.getExerciseTypes().subscribe((exerciseTypes: ExerciseType[]) => {\n        this.exerciseService.getExercise(id).subscribe((exercise: Exercise) => {\n          this.loadingService.isLoading(false);\n          this.loaded = true;\n          this.exercise = new Exercise(exerciseTypes, exercise);\n        });\n      });\n    }\n\n  }\n\n}\n","<h1>Edit Exercise</h1>\n\n<div *ngIf=\"loaded\">\n  <div class=\"row\">\n    <div class=\"col-sm-7\">\n      <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input matInput [value]=\"exercise?.name\" />\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-5\">\n      <mat-form-field>\n        <mat-label>Type</mat-label>\n        <mat-select (value)=\"exercise?.exerciseTypeId\">\n          <mat-option *ngFor=\"let exerciseType of exerciseTypes\" value=\"{{exerciseType.id}}\">{{exerciseType.name}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-12\">\n      <mat-form-field>\n        <mat-label>Notes</mat-label>\n        <textarea matInput cdkTextareaAutosize cdkAutosizeMinRows=\"1\">{{exercise?.notes}}</textarea>\n      </mat-form-field>\n    </div>\n  </div>\n\n  <!-- <p><b>Name:</b> {{exercise?.name}}</p>\n  <p><b>Type:</b> {{exercise?.exerciseTypeId}}</p>\n  <p><b>Notes:</b> {{exercise?.notes}}</p> -->\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { Exercise, ExerciseType } from './exercise.interface';\n\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExerciseService {\n\n  private exerciseTypes: any;\n\n  constructor(private http: HttpClient) { }\n\n  getExercises(): Observable<Exercise[]> {\n    return this.http.get<Exercise[]>(`${environment.api}/exercise/read.php`);\n  }\n\n  getExercise(exerciseId: string): Observable<Exercise> {\n    return this.http.get<Exercise>(`${environment.api}/exercise/read.php?id=${exerciseId}`);\n  }\n\n  getExerciseTypes(): Observable<ExerciseType[]> {\n    if (this.exerciseTypes != null) {\n      return this.exerciseTypes;\n    }\n    this.exerciseTypes = this.http.get<ExerciseType[]>(`${environment.api}/exerciseType/read.php`);\n    return this.exerciseTypes;\n  }\n}\n","export class Exercise {\n  id: number = 0;\n  userId: number = 0;\n  name: string = ``;\n  exerciseTypeId: number = 0;\n  exerciseType: ExerciseType | undefined;\n  notes: string = ``;\n  created: string = ``;\n  modified: string = ``;\n\n  constructor(exerciseTypes: ExerciseType[], init?: Partial<Exercise>) {\n    this.userId = -1; // get the current user's id\n    this.created = new Date().toISOString();\n    Object.assign(this, init);\n\n    this.exerciseType = exerciseTypes.find(x => x.id == this.exerciseTypeId);\n  }\n}\n\nexport interface ExerciseType {\n  id: number;\n  name: string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>settings works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n  <p>home works!</p>\n</mat-card>\n\n<button mat-fab aria-label=\"Start Workout\" routerLink=\"/workouts/new\" class=\"cta-bottom-right\">\n  <mat-icon aria-hidden=\"false\">add</mat-icon>\n</button>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: 'http://workoutlog-api.jasonray.me',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<div class=\"frame\">\n  <mat-toolbar class=\"toolbar\" color=\"primary\">\n    <button mat-icon-button aria-label=\"Open Menu\" (click)=\"sidenav.toggle()\">\n      <mat-icon aria-hidden=\"false\">menu</mat-icon>\n    </button>\n    <span routerLink=\"/\">Workout Log</span>\n  </mat-toolbar>\n\n  <!-- <mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav mode=\"side\" opened>Sidenav content</mat-sidenav>\n  <mat-sidenav-content>Main content</mat-sidenav-content>\n</mat-sidenav-container> -->\n\n  <mat-sidenav-container class=\"sidenav-container\">\n    <mat-sidenav #sidenav class=\"sidenav\" mode=\"side\" color=\"primary\">\n      <a routerLink=\"/\">Dashboard</a>\n      <a routerLink=\"/workouts\">Workouts</a>\n      <a routerLink=\"/exercises\">Exercises</a>\n      <a routerLink=\"/settings\">Settings</a>\n    </mat-sidenav>\n\n    <mat-sidenav-content>\n      <div class=\"container\">\n        <router-outlet></router-outlet>\n      </div>\n    </mat-sidenav-content>\n\n  </mat-sidenav-container>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { HomeComponent } from './home/home.component';\nimport { WorkoutsComponent } from './workouts/workouts.component';\nimport { WorkoutDetailsComponent } from './workouts/workout-details/workout-details.component';\nimport { ExercisesComponent } from './exercises/exercises.component';\nimport { ExerciseDetailsComponent } from './exercises/exercise-details/exercise-details.component';\nimport { SettingsComponent } from './settings/settings.component';\n\nimport { LoadingService } from './services/loading/loading.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    WorkoutsComponent,\n    WorkoutDetailsComponent,\n    ExercisesComponent,\n    ExerciseDetailsComponent,\n    SettingsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTableModule,\n    MatToolbarModule\n  ],\n  providers: [\n    LoadingService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-workout-details',\n  templateUrl: './workout-details.component.html',\n  styleUrls: ['./workout-details.component.scss']\n})\nexport class WorkoutDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>workout-details works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { LoadingService } from '../services/loading/loading.service';\nimport { Exercise, ExerciseType } from './exercise.interface';\nimport { ExerciseService } from './exercise.service';\n\n@Component({\n  selector: 'app-exercises',\n  templateUrl: './exercises.component.html',\n  styleUrls: ['./exercises.component.scss']\n})\nexport class ExercisesComponent implements OnInit {\n\n  exercises: Exercise[] = [];\n  loaded: boolean = false;\n  displayedColumns: string[] = ['name', 'exerciseTypeId', 'notes'];\n\n  constructor(private loadingService: LoadingService, private exerciseService: ExerciseService) { }\n\n  ngOnInit(): void {\n    this.loadingService.isLoading();\n    this.exercises = [];\n    this.exerciseService.getExerciseTypes().subscribe((exerciseTypes: ExerciseType[]) => {\n      this.exerciseService.getExercises().subscribe((exercises: Exercise[]) => {\n        this.loadingService.isLoading(false);\n        this.loaded = true;\n        this.exercises = exercises.map(exercise => new Exercise(exerciseTypes, exercise));\n      });\n    });\n  }\n\n}\n","<h1>Exercises</h1>\n\n<div *ngIf=\"loaded\">\n\n  <p *ngIf=\"exercises.length == 0\">You haven't created any exercises yet.</p>\n\n  <p *ngIf=\"exercises.length > 0\">These are the exercises you've created.</p>\n\n  <table *ngIf=\"exercises.length > 0\" mat-table [dataSource]=\"exercises\" class=\"mat-elevation-z8 clickable\">\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let exercise\"> {{exercise?.name}} </td>\n    </ng-container>\n\n    <!-- Exercise Type Column -->\n    <ng-container matColumnDef=\"exerciseTypeId\">\n      <th mat-header-cell *matHeaderCellDef> Type </th>\n      <td mat-cell *matCellDef=\"let exercise\"> {{exercise?.exerciseType?.name}} </td>\n    </ng-container>\n\n    <!-- Notes Column -->\n    <ng-container matColumnDef=\"notes\">\n      <th mat-header-cell *matHeaderCellDef> Notes </th>\n      <td mat-cell *matCellDef=\"let exercise\"> {{exercise?.notes}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" routerLink=\"{{row.id}}\"></tr>\n  </table>\n\n</div>\n<button mat-fab aria-label=\"New Exercise\" routerLink=\"/exercises/new\" class=\"cta-bottom-right\">\n  <mat-icon aria-hidden=\"false\">add</mat-icon>\n</button>\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 clickable\">\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n<button mat-fab aria-label=\"Start Workout\" routerLink=\"/workouts/new\" class=\"cta-bottom-right\">\n  <mat-icon aria-hidden=\"false\">add</mat-icon>\n</button>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-workouts',\n  templateUrl: './workouts.component.html',\n  styleUrls: ['./workouts.component.scss']\n})\n\n// export interface PeriodicElement {\n//   name: string;\n//   position: number;\n//   weight: number;\n//   symbol: string;\n// }\n\n// const ELEMENT_DATA =\n\nexport class WorkoutsComponent implements OnInit {\n\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = [\n    {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n    {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n    {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n    {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n    {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n    {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n    {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n    {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n    {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n    {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { WorkoutsComponent } from './workouts/workouts.component';\nimport { WorkoutDetailsComponent } from './workouts/workout-details/workout-details.component';\nimport { ExercisesComponent } from './exercises/exercises.component';\nimport { ExerciseDetailsComponent } from './exercises/exercise-details/exercise-details.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'workouts', component: WorkoutsComponent },\n  { path: 'workouts/:id', component: WorkoutDetailsComponent },\n  { path: 'exercises', component: ExercisesComponent },\n  { path: 'exercises/:id', component: ExerciseDetailsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LoadingService {\n\n  constructor() { }\n\n  isLoading(isLoading = true) {\n    if (isLoading) {\n      document.body.classList.add('loading');\n    } else {\n      document.body.classList.remove('loading');\n    }\n  }\n\n  isLoadingInnerContent(isLoading = true) {\n    const tag = document.getElementsByClassName('main-content');\n\n    if (tag.length > 0 && isLoading) {\n      tag[0].classList.add('loading-spin');\n    } else if (tag.length > 0) {\n      tag[0].classList.remove('loading-spin');\n    }\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}